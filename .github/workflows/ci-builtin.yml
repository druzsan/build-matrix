name: 'üîç CI (built-in matrix)'

on: push

# This is action code check, action integration test and advanced usage example
# at the same time.

jobs:
  # Check code formatting
  check-format:
    name: 'üîç Check Formatting'
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ['3.8', '3.10', '3.12']
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - run: python -m pip install -IU pip setuptools wheel
      - run: pip install -IUr requirements.txt -r requirements-dev.txt
      - run: black --check .
  # Check code types
  typecheck:
    name: 'üîç Check Types'
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ['3.8', '3.10', '3.12']
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - run: python -m pip install -IU pip setuptools wheel
      - run: pip install -IUr requirements.txt -r requirements-dev.txt
      - run: mypy main.py && mypy tests
  # Lint code
  lint:
    name: 'üîç Lint'
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ['3.8', '3.10', '3.12']
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - run: python -m pip install -IU pip setuptools wheel
      - run: pip install -IUr requirements.txt -r requirements-dev.txt
      - run: ruff check main.py tests
